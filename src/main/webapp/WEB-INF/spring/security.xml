<?xml version="1.0" encoding="utf-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

	<security:global-method-security
		pre-post-annotations="enabled" secured-annotations="enabled" />

	<security:http auto-config="true">

		<security:form-login login-page="/login"
			password-parameter="password" username-parameter="username"
			login-processing-url="/login_spring_security" default-target-url="/articles" />
		<security:logout logout-url="/logout"
			logout-success-url="/?logout=true" />
		<security:intercept-url pattern="/admin/*"
			access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<security:intercept-url pattern="/login"
			access="permitAll()" />

	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder hash="bcrypt" />
			<security:jdbc-user-service
				data-source-ref="dbSource"

				authorities-by-username-query="select user.username, role.name from user join user_role on user.id = user_role.users_id join role on user_role.roles_id = role.id where user.username = ?"

				users-by-username-query="select user.username, user.password, user.enabled  from user where username = ?" />

		</security:authentication-provider>
	</security:authentication-manager>

</beans:beans>